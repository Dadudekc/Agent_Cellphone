#!/usr/bin/env python3
"""
Collaborative Task Orchestrator - Coordinates multi-agent collaborative work

This orchestrator manages the new collaborative tasks generated by the FSM system:
1. Collaborative decision-making algorithms using all agents' expertise
2. Unified knowledge management system that all agents contribute to
3. Automated collaboration tools that enhance agent teamwork
4. Collaborative learning systems that improve all agents' capabilities
5. NEW: Analyze and optimize the entire agent coordination system
6. NEW: Design collaborative problem-solving workflows that leverage each agent's strengths

ONGOING INSTRUCTIONS: ALL agents must work together on these tasks!
"""

import json
import logging
import time
from pathlib import Path
from typing import Dict, List, Any, Optional
from datetime import datetime

from .collaborative_task_manager import (
    CollaborativeTaskManager, 
    CollaborativeTaskType, 
    CollaborativeTaskState
)

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class CollaborativeOrchestrator:
    """Orchestrates collaborative tasks across all agents"""
    
    def __init__(self, base_path: Path):
        """
        Initialize Collaborative Orchestrator
        
        Args:
            base_path: Base directory for collaborative task data
        """
        self.base_path = Path(base_path)
        self.task_manager = CollaborativeTaskManager(base_path)
        
        # Agent assignments for collaborative tasks
        self.agent_assignments = {
            "Agent-1": "coordination_and_strategic_planning",
            "Agent-2": "task_breakdown_and_resource_allocation", 
            "Agent-3": "data_analysis_and_technical_implementation",
            "Agent-4": "communication_protocols_and_security",
            "Agent-5": "overall_coordination_and_verification"
        }
        
        # Initialize collaborative tasks
        self._initialize_collaborative_tasks()
        
        logger.info(f"Collaborative Orchestrator initialized: {self.base_path}")

    def _initialize_collaborative_tasks(self):
        """Initialize the new collaborative tasks from the FSM system"""
        
        # Task 1: Collaborative Decision-Making Algorithms
        self.task_manager.create_collaborative_task(
            title="Develop Collaborative Decision-Making Algorithms",
            description="""Develop collaborative decision-making algorithms using all agents' expertise.
            
            INSTRUCTIONS FOR ALL AGENTS:
            - Agent-1: Lead the coordination and strategic planning
            - Agent-2: Manage task breakdown and resource allocation
            - Agent-3: Handle data analysis and technical implementation
            - Agent-4: Ensure communication protocols and security
            - Agent-5: Coordinate overall process and verification
            
            These are NEW collaborative opportunities.
            Work together to tackle these tasks and combine your expertise to create innovative solutions.
            ALL agents must work together on this task.
            NEVER STOP collaborating and improving!
            
            COLLABORATION PROCESS: Keep the collaborative momentum going!""",
            task_type=CollaborativeTaskType.DECISION_MAKING,
            assigned_agents=["Agent-1", "Agent-2", "Agent-3", "Agent-4", "Agent-5"]
        )
        
        # Task 2: Unified Knowledge Management System
        self.task_manager.create_collaborative_task(
            title="Create Unified Knowledge Management System",
            description="""Create a unified knowledge management system that all agents contribute to.
            
            INSTRUCTIONS FOR ALL AGENTS:
            - Agent-1: Lead the coordination and strategic planning
            - Agent-2: Manage task breakdown and resource allocation
            - Agent-3: Handle data analysis and technical implementation
            - Agent-4: Ensure communication protocols and security
            - Agent-5: Coordinate overall process and verification
            
            These are NEW collaborative opportunities.
            Work together to tackle these tasks and combine your expertise to create innovative solutions.
            ALL agents must work together on this task.
            NEVER STOP collaborating and improving!
            
            COLLABORATION PROCESS: Keep the collaborative momentum going!""",
            task_type=CollaborativeTaskType.KNOWLEDGE_MANAGEMENT,
            assigned_agents=["Agent-1", "Agent-2", "Agent-3", "Agent-4", "Agent-5"]
        )
        
        # Task 3: Automated Collaboration Tools
        self.task_manager.create_collaborative_task(
            title="Build Automated Collaboration Tools",
            description="""Build automated collaboration tools that enhance agent teamwork.
            
            INSTRUCTIONS FOR ALL AGENTS:
            - Agent-1: Lead the coordination and strategic planning
            - Agent-2: Manage task breakdown and resource allocation
            - Agent-3: Handle data analysis and technical implementation
            - Agent-4: Ensure communication protocols and security
            - Agent-5: Coordinate overall process and verification
            
            These are NEW collaborative opportunities.
            Work together to tackle these tasks and combine your expertise to create innovative solutions.
            ALL agents must work together on this task.
            NEVER STOP collaborating and improving!
            
            COLLABORATION PROCESS: Keep the collaborative momentum going!""",
            task_type=CollaborativeTaskType.COLLABORATION_TOOLS,
            assigned_agents=["Agent-1", "Agent-2", "Agent-3", "Agent-4", "Agent-5"]
        )
        
        # Task 4: Collaborative Learning Systems
        self.task_manager.create_collaborative_task(
            title="Develop Collaborative Learning Systems",
            description="""Develop collaborative learning systems that improve all agents' capabilities.
            
            INSTRUCTIONS FOR ALL AGENTS:
            - Agent-1: Lead the coordination and strategic planning
            - Agent-2: Manage task breakdown and resource allocation
            - Agent-3: Handle data analysis and technical implementation
            - Agent-4: Ensure communication protocols and security
            - Agent-5: Coordinate overall process and verification
            
            These are NEW collaborative opportunities.
            Work together to tackle these tasks and combine your expertise to create innovative solutions.
            ALL agents must work together on this task.
            NEVER STOP collaborating and improving!
            
            COLLABORATION PROCESS: Keep the collaborative momentum going!""",
            task_type=CollaborativeTaskType.LEARNING_SYSTEMS,
            assigned_agents=["Agent-1", "Agent-2", "Agent-3", "Agent-4", "Agent-5"]
        )
        
        # NEW TASK 5: Analyze and Optimize Agent Coordination System
        self.task_manager.create_collaborative_task(
            title="Analyze and Optimize Agent Coordination System",
            description="""Analyze and optimize the entire agent coordination system.
            
            INSTRUCTIONS FOR ALL AGENTS:
            - Agent-1: Lead the coordination and strategic planning
            - Agent-2: Manage task breakdown and resource allocation
            - Agent-3: Handle data analysis and technical implementation
            - Agent-4: Ensure communication protocols and security
            - Agent-5: Coordinate overall process and verification
            
            These are NEW collaborative opportunities.
            Work together to tackle these tasks and combine your expertise to create innovative solutions.
            ALL agents must work together on this task.
            NEVER STOP collaborating and improving!
            
            COLLABORATION PROCESS: Keep the collaborative momentum going!""",
            task_type=CollaborativeTaskType.DECISION_MAKING,
            assigned_agents=["Agent-1", "Agent-2", "Agent-3", "Agent-4", "Agent-5"]
        )
        
        # NEW TASK 6: Design Collaborative Problem-Solving Workflows
        self.task_manager.create_collaborative_task(
            title="Design Collaborative Problem-Solving Workflows",
            description="""Design collaborative problem-solving workflows that leverage each agent's strengths.
            
            INSTRUCTIONS FOR ALL AGENTS:
            - Agent-1: Lead the coordination and strategic planning
            - Agent-2: Manage task breakdown and resource allocation
            - Agent-3: Handle data analysis and technical implementation
            - Agent-4: Ensure communication protocols and security
            - Agent-5: Coordinate overall process and verification
            
            These are NEW collaborative opportunities.
            Work together to tackle these tasks and combine your expertise to create innovative solutions.
            ALL agents must work together on this task.
            NEVER STOP collaborating and improving!
            
            COLLABORATION PROCESS: Keep the collaborative momentum going!""",
            task_type=CollaborativeTaskType.COLLABORATION_TOOLS,
            assigned_agents=["Agent-1", "Agent-2", "Agent-3", "Agent-4", "Agent-5"]
        )
        
        logger.info("Initialized 6 new collaborative tasks for all agents")

    def get_collaborative_tasks_summary(self) -> Dict[str, Any]:
        """Get summary of all collaborative tasks"""
        return self.task_manager.get_task_summary()

    def get_active_collaborative_tasks(self) -> List[Any]:
        """Get all active collaborative tasks"""
        return self.task_manager.get_collaborative_tasks(
            state=CollaborativeTaskState.NEW
        )

    def start_collaboration_round(self, task_id: str) -> bool:
        """Start a new collaboration round for a task"""
        return self.task_manager.advance_collaboration_round(task_id)

    def add_agent_contribution(
        self, 
        task_id: str, 
        agent_id: str, 
        contribution_type: str, 
        content: str
    ) -> Any:
        """Add an agent contribution to a collaborative task"""
        return self.task_manager.add_agent_contribution(
            task_id, agent_id, contribution_type, content
        )

    def get_collaboration_status(self) -> Dict[str, Any]:
        """Get current collaboration status across all tasks"""
        tasks = self.task_manager.get_collaborative_tasks()
        
        status = {
            "total_collaborative_tasks": len(tasks),
            "collaboration_round": 1,
            "active_agents": list(self.agent_assignments.keys()),
            "task_progress": {}
        }
        
        for task in tasks:
            status["task_progress"][task.title] = {
                "state": task.state.value,
                "current_round": task.current_round,
                "assigned_agents": task.assigned_agents,
                "collaboration_rounds": task.collaboration_rounds
            }
            
        return status

    def generate_collaboration_report(self) -> str:
        """Generate a comprehensive collaboration report"""
        status = self.get_collaboration_status()
        tasks = self.task_manager.get_collaborative_tasks()
        
        report = f"""
🤝 COLLABORATIVE TASKS STATUS REPORT
{'='*50}

📊 OVERVIEW:
- Total Collaborative Tasks: {status['total_collaborative_tasks']}
- Active Agents: {', '.join(status['active_agents'])}
- Current Collaboration Round: {status['collaboration_round']}

📋 TASK DETAILS:
"""
        
        for task in tasks:
            report += f"""
🔹 {task.title}
   Status: {task.state.value}
   Round: {task.current_round}/{task.collaboration_rounds}
   Agents: {', '.join(task.assigned_agents)}
   Type: {task.task_type.value}
"""
        
        report += f"""
🎯 NEXT STEPS:
- All agents should contribute to their assigned collaborative tasks
- Focus on the current collaboration round objectives
- Maintain continuous communication and coordination
- NEVER STOP collaborating and improving!

🚨 IMPORTANT REMINDER:
- These are NEW collaborative opportunities
- ALL agents must work together on these tasks
- Work together to tackle these tasks and combine your expertise
- COLLABORATION PROCESS: Keep the collaborative momentum going!

⏰ Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
"""
        
        return report

    def save_collaboration_report(self, filename: str = None):
        """Save the collaboration report to a file"""
        if filename is None:
            filename = f"collaboration_report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.md"
        
        report_path = self.base_path / "reports" / filename
        report_path.parent.mkdir(parents=True, exist_ok=True)
        
        report_content = self.generate_collaboration_report()
        
        with open(report_path, 'w', encoding='utf-8') as f:
            f.write(report_content)
            
        logger.info(f"Collaboration report saved to: {report_path}")
        return report_path

    def get_expanded_collaboration_opportunities(self) -> Dict[str, Any]:
        """Get information about expanded collaboration opportunities"""
        return {
            "new_tasks_available": True,
            "expanded_scope": [
                "Analyze and optimize the entire agent coordination system",
                "Design collaborative problem-solving workflows that leverage each agent's strengths"
            ],
            "collaboration_requirements": "ALL agents must work together on these tasks",
            "agent_coordination_focus": "Enhanced coordination and optimization of the entire system",
            "workflow_design_focus": "Leverage each agent's unique strengths in collaborative workflows"
        }

    def get_ongoing_collaboration_instructions(self) -> str:
        """Get ongoing collaboration instructions for all agents"""
        return """
🚨 ONGOING COLLABORATION INSTRUCTIONS:

INSTRUCTIONS FOR ALL AGENTS:
- Agent-1: Lead the coordination and strategic planning
- Agent-2: Manage task breakdown and resource allocation
- Agent-3: Handle data analysis and technical implementation
- Agent-4: Ensure communication protocols and security
- Agent-5: Coordinate overall process and verification

These are NEW collaborative opportunities.
Work together to tackle these tasks and combine your expertise to create innovative solutions.
ALL agents must work together on this task.
NEVER STOP collaborating and improving!

COLLABORATION PROCESS: Keep the collaborative momentum going!
"""
